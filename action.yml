name: 'Setup EDAMAME Posture'
description: 'Download and start EDAMAME Posture'
inputs:
  edamame_user:
    description: 'EDAMAME Posture User'
    required: true
  edamame_domain:
    description: 'EDAMAME Posture Domain'
    required: true
  edamame_pin:
    description: 'EDAMAME Posture PIN'
    required: true
  edamame_id:
    description: 'EDAMAME identifier suffix'
    required: true

runs:
  using: 'composite'

  steps:

    - name: Dependencies
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          choco install wget
        fi
      shell: bash

    - name: Download EDAMAME Posture binary
      run: |
        # Position the binary in the home folder of the runner
        cd ..
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          wget https://edamame-posture.s3.eu-west-1.amazonaws.com/dev/linux/0.3.83/edamame_posture
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          wget https://edamame-posture.s3.eu-west-1.amazonaws.com/dev/macos/0.3.83/edamame_posture
        elif [[ "$RUNNER_OS" == "Windows" ]]; then
          wget https://edamame-posture.s3.eu-west-1.amazonaws.com/dev/windows/0.3.83/edamame_posture.exe
        else
          echo "Unsupported OS: $RUNNER_OS"
          exit 1
        fi
      shell: bash

    - name: Start EDAMAME Posture and wait for success
      run: |
        cd ..
        chmod u+x edamame_posture*
        # We use the GitHub run ID as the device ID
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          # No sudo on Windows
          ./edamame_posture.exe start ${{ inputs.edamame_user }} ${{ inputs.edamame_domain }} ${{ inputs.edamame_pin }} ${{ inputs.edamame_id }}
          ./edamame_posture.exe wait-for-success
        else
          sudo ./edamame_posture start ${{ inputs.edamame_user }} ${{ inputs.edamame_domain }} ${{ inputs.edamame_pin }} ${{ inputs.edamame_id }}
          sudo ./edamame_posture wait-for-success
        fi
      shell: bash


